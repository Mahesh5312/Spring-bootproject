<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
 
	<groupId>user-demo</groupId>
	<artifactId>user-demo</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<docker.registry>index.docker.io/pd30470</docker.registry>  <!-- docker image creation -->
		<java.version>1.8</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			
			
			
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			
			
			
			<exclusions>
	            <exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>	            	
	            </exclusion>
        	</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
			
			
			
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			
			
			
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			
			<scope>test</scope>
			
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			
			
			
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			
			
			
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			
			<scope>test</scope>
			
		</dependency>
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.11.0</version>
			
			
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			
			
			
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			
			<scope>test</scope>
			
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			
			<scope>test</scope>
			
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			
			
			
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.5.6</version>
			
			
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			
			
			
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- docker image creation -->
            <plugin>
    				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
			        <executions>
        				<execution>
				            <phase>package</phase>
            				    <goals>
				                <goal>build</goal>
				            </goals>
        				</execution>
    				</executions>
    				<configuration>
        				<dockerDirectory>${project.basedir}</dockerDirectory>
        				<buildArgs>
        				<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
        				</buildArgs>
        				<imageName>${docker.registry}/${project.artifactId}</imageName>
        				<!-- To push image to docker hub. Add docker hub credentials in settings.xml -->
        				<serverId>docker-hub</serverId> 
        				<pushImage>true</pushImage>
    					</configuration>
                        </plugin>
		</plugins>
	</build>
	
	<!-- 
	<repositories>
		<repository>
			<id>repo-id</id>
			<name>repo-name</name>
			<url>repo-url</url>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>repo-id</id>
			<name>repo-name</name>
			<url>repo-url</url>
		</pluginRepository>
	</pluginRepositories>
	
	<distributionManagement>
		<repository>
			<id>repo-id</id>
			<name>repo-name</name>
			<url>repo-url</url>
		</repository>
	</distributionManagement>
	-->
</project>